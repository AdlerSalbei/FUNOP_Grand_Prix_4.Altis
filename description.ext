#define MODULES_DIRECTORY node_modules

class Header
{
	gameType = Coop;
};

//MISSION SETTINGS =============================================================
respawn = 3;
respawnDelay = 10;
respawnVehicleDelay = 0;
respawnTemplates[] = {"Base"};
respawnOnStart = -1;
respawnDialog = 0;
disabledAI = 0;
allowFunctionsRecompile = 1;
reviveMode = 0;
joinUnassigned = 0;

enableDebugConsole = 1;

#include "USER\missionInfo.hpp"
#include "USER\loadouts.hpp"
#include "USER\garbageCollector.hpp"
#include "cfgEventHandlers.hpp"
#include "cfgIslands.hpp"
#include "cfgCivilians.hpp"
#include "USER\CfgFlightPaths.hpp"

class missionSettings {
	#include "USER\missionSettings.hpp"

	class restrictedArsenal {
		#include "USER\restrictedArsenal.hpp"
	};

	class groupsettings {
		#include "USER\groupsettings.hpp"
	};

	class radiosettings {
		#include "USER\radiosettings.hpp"
	};

	class respawnSettings {
		#include "USER\respawnSettings.hpp"
	};
};


//FUNCTIONS ====================================================================
class CfgFunctions
{
	#include "functions\common\cfgFunctions.hpp"
	#include "functions\diagnostics\cfgFunctions.hpp"
    #include "functions\events\cfgFunctions.hpp"
    #include "functions\external\cfgFunctions.hpp"
    #include "functions\groupsettings\cfgFunctions.hpp"
	#include "functions\missionSetup\cfgFunctions.hpp"
    #include "functions\radiosettings\cfgFunctions.hpp"
	#include "functions\waverespawn\cfgFunctions.hpp"

    #include "node_modules\grad-loadout\cfgFunctions.hpp"
	#include "node_modules\grad-fortifications\cfgFunctions.hpp"
	#include "node_modules\grad-introcam\cfgFunctions.hpp"

	#include "USER\userFunctions.hpp"
};


//DIALOGS ======================================================================
#include "node_modules\grad-fortifications\grad_fortifications.hpp"

class RscTitles {
	#include "node_modules\grad-fortifications\dialog\hint\title.hpp"
	#include "USER\userTitles.hpp"

    class grad_Default {
        idd = -1;
        fadein = 0;
        fadeout = 0;
        duration = 0;
    };
};

//NOTIFICATIONS ================================================================
class CfgNotifications
{
    class grad_notification1 {
        title = "%1";
        iconPicture = "\A3\ui_f\data\map\markers\military\warning_CA.paa";
        description = "%2";
        duration = 5;
        priority = 0;
    };

	#include "USER\userNotifications.hpp"
};


//PARAMS =======================================================================
class Params {
    #include "USER\userParams.hpp"
};


//SOUNDS =======================================================================
class CfgSounds {
	#include "USER\userSounds.hpp"
};

//MUSIC =======================================================================
class CfgMusic {
	#include "USER\userMusic.hpp"
};

//GRAD LOADOUT =================================================================
class Loadouts {
    baseDelay = 1;
    handleRadios = 1;
    resetLoadout = 0;

    #include "USER\customGear.hpp"

    class Faction {
        #include "node_modules\grad-factions\loadouts.hpp"
        #include "USER\userLoadouts.hpp"
    };
};

//GRAD CIVS ====================================================================
class CfgGradCivs {
	#include "USER\civSettings.hpp"
};


//OTHER NPM MODULES ============================================================
class CfgGradFortifications {
    #include "USER\userFortifications.hpp"
};

// QUIZ GUI ====================================================================
class jules_ctrlEdit_right {
	access = 0;
	autocomplete = "";
	blinkingPeriod = 0;
	canModify = 1;
	colorBackground[] = {0,0,0,0.5};
	colorDisabled[] = {1,1,1,0.25};
	colorSelection[] = {"(profilenamespace getvariable ['GUI_BCG_RGB_R',0.77])","(profilenamespace getvariable ['GUI_BCG_RGB_G',0.51])","(profilenamespace getvariable ['GUI_BCG_RGB_B',0.08])",1};
	colorText[] = {1,1,1,1};
	default = 0;
	deletable = 0;
	fade = 0;
	font = "RobotoCondensedLight";
	h = 0;
	idc = -1;
	onCanDestroy = "";
	onDestroy = "";
	onKeyDown = "";
	onKeyUp = "";
	onKillFocus = "";
	onMouseButtonClick = "";
	onMouseButtonDblClick = "";
	onMouseButtonDown = "";
	onMouseButtonUp = "";
	onMouseHolding = "";
	onMouseMoving = "";
	onMouseZChanged = "";
	onSetFocus = "";
	shadow = 1;
	show = 1;
	sizeEx = "4.32 * (1 / (getResolution select 3)) * pixelGrid * 0.5";
	style = 1;
	text = "";
	tooltip = "";
	tooltipColorBox[] = {0,0,0,0};
	tooltipColorShade[] = {0,0,0,1};
	tooltipColorText[] = {1,1,1,1};
	tooltipMaxWidth = 0.5;
	type = 2;
	w = 0;
	x = 0;
	y = 0;

	class ScrollBar {
		arrowEmpty = "\a3\3DEN\Data\Controls\ctrlDefault\arrowEmpty_ca.paa";
		arrowFull = "\a3\3DEN\Data\Controls\ctrlDefault\arrowFull_ca.paa";
		border = "\a3\3DEN\Data\Controls\ctrlDefault\border_ca.paa";
		color[] = {1,1,1,1};
		height = 0;
		scrollSpeed = 0.06;
		thumb = "\a3\3DEN\Data\Controls\ctrlDefault\thumb_ca.paa";
		width = 0;
	};
};

class jules_ctrlEdit_middle: jules_ctrlEdit_right {
	style = 2;
};

class JulesRscToolbox {
	deletable = 0;
	fade = 0;
	access = 0;
	type = 6;
	style = 2;
	colorText[] = {0.95,0.95,0.95,1};
	color[] = {0.95,0.95,0.95,1};
	colorTextSelect[] = {0.95,0.95,0.95,1};
	colorSelect[] = {0.95,0.95,0.95,1};
	colorTextDisable[] = {0.4,0.4,0.4,1};
	colorDisable[] = {0.4,0.4,0.4,1};
	colorSelectedBg[] =
	{
		"(profilenamespace getvariable ['GUI_BCG_RGB_R',0.13])",
		"(profilenamespace getvariable ['GUI_BCG_RGB_G',0.54])",
		"(profilenamespace getvariable ['GUI_BCG_RGB_B',0.21])",
		0.9
	};
	shadow = 0;
	strings[] =
	{
		"",
		""
	};
	x = 0;
	y = 0;
	w = 0.3;
	h = 0.025;
	rows = 1;
	columns = 2;
	font = "RobotoCondensed";
	sizeEx = (3*pixelH*pixelGrid);
};

class MultipleChoiceCtrl: JulesRscToolbox {
	rows = 2;
	columns = 2;
	strings[] =
	{
		"",
		"",
		"",
		""
	};
};

import ctrlListNBox;
class JulesListBox: ctrlListNBox {
	font = "EtelkaMonospacePro";
    // rows = 8;
    rowHeight = 0.1;
    sizeEx = pixelH * pixelGrid * 2.5;
    colorSelectBackground2[] = {1,1,1,0};
    colorSelectBackground[] = {1,1,1,0.2};
    // style = 0x10 + 0x02;
};

// class GrandPrixResultCtrl: JulesRscStatic {
// 	rows = 7;
// 	columns = 5;
// 	strings[] =
// 	{
// 		"",
// 		"",
// 		"",
// 		"",
//         "",
// 		"",
// 		"",
// 		"",
// 		"",
//         "",
// 		"",
// 		"",
// 		"",
// 		"",
//         "",
// 		"",
// 		"",
// 		"",
// 		"",
//         "",
// 		"",
// 		"",
// 		"",
// 		"",
//         "",
// 		"",
// 		"",
// 		"",
// 		"",
//         "",
//         "",
//         "",
//         "",
//         "",
//         ""         
// 	};
// };